name: B&H Camera Monitor

on:
  schedule:
    # Runs at 9 AM EST every day (2 PM UTC)
    - cron: '0 14 * * *'
  workflow_dispatch:  # Allows manual triggering for testing

jobs:
  check-cameras:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        persist-credentials: true
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4
    
    - name: Run camera scraper
      env:
        SCRAPER_API_KEY: ${{ secrets.SCRAPER_API_KEY }}
      run: |
        echo "Starting camera scraper..."
        python scraper.py
    
    - name: Check if new cameras were found
      id: check_cameras
      run: |
        if [ -s new_cameras.txt ]; then
          echo "New cameras found!"
          echo "has_new_cameras=true" >> $GITHUB_OUTPUT
          cat new_cameras.txt
        else
          echo "No new cameras found"
          echo "has_new_cameras=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Send notification if new cameras found
      if: steps.check_cameras.outputs.has_new_cameras == 'true'
      env:
        COURIER_API_KEY: ${{ secrets.COURIER_API_KEY }}
        EMAIL_RECIPIENTS: ${{ secrets.EMAIL_RECIPIENTS }}
      run: |
        echo "Sending email notification..."
        python send_notification.py
    
    - name: Commit and push camera database
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add the cameras database if it exists
        if [ -f data/cameras.json ]; then
          git add data/cameras.json
        fi
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update camera database [skip ci]"
          git push
        fi
    
    - name: Upload artifacts for debugging
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: scraper-results
        path: |
          new_cameras.txt
          data/cameras.json
        retention-days: 7
    
    - name: Summary
      if: always()
      run: |
        echo "## Scraper Run Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Run time:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f data/cameras.json ]; then
          total=$(python -c "import json; data=json.load(open('data/cameras.json')); print(len(data.get('cameras', [])))")
          echo "**Total cameras tracked:** $total" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -s new_cameras.txt ]; then
          new_count=$(wc -l < new_cameras.txt)
          echo "**New cameras found:** $new_count" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### New Cameras:" >> $GITHUB_STEP_SUMMARY
          cat new_cameras.txt >> $GITHUB_STEP_SUMMARY
        else
          echo "**New cameras found:** 0" >> $GITHUB_STEP_SUMMARY
        fi
